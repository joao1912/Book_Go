{
  "openapi": "3.0.1",
  "info": {
    "title": "API do Software Book",
    "description": "Essa API vai manipular os dados de uma biblioteca local",
    "contact": {
      "emailOne": "joaopedrot1912@gmail.com",
      "emailTwo": "ggisa.mj@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8085/v1",
      "description": "API de produção"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Everything about users",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "book",
      "description": "Everything about books",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "reservation",
      "description": "Everything about reservations of our books",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "stock",
      "description": "Everything about our stock",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "summary": "Buscar todos os usuarios",
        "description": "Essa rota será responsável por buscar todos os usuarios cadastrados",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Usuario"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "summary": "Logs user",
        "description": "Logs user into the library system",
        "operationId": "login",
        "security": [],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "testswagger@gmail.com"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type":"string",
                "example": {
                  "email": "admin_teste@gmail.com",
                  "password": "123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Missing parameters(email or password)."
          },
          "401": {
            "description": "Invalid password."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/": {
      "get": {
        "tags": ["book"],
        "summary": "Finds all books",
        "description": "Finds all book on the database.",
        "operationId": "getAllBooks",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": ["book"],
        "summary": "Deletes a book",
        "description": "Delete a book of the database.",
        "operationId": "deleteBook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the book to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The book with ID ${id} and title ${book.title} has been successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Id provided does not exist."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/genre/{genre}": {
      "post": {
        "tags": ["book"],
        "summary": "Search books by genre",
        "description": "Search books by its genre",
        "operationId": "searchBookByGenre",
        "security": [],
        "parameters": [
          {
            "name": "genre",
            "in": "path",
            "description": "Genre of a book",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Genre not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/title/{title}": {
      "post": {
        "tags": ["book"],
        "summary": "Searchs books by title",
        "description": "Search book by its title",
        "operationId": "searchBookByTitle",
        "security": [],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "Title of a book",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/add": {
      "post": {
        "tags": ["book"],
        "summary": "Adds/Creates a book",
        "description": "Adds a new book to the library. This only can be done by an admin",
        "operationId": "addBook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Created book object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input type provided."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/book/update/{bookId}": {
      "put": {
        "tags": ["book"],
        "summary": "Update book",
        "description": "This only can be done by an admin",
        "operationId": "updateBook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "Id of the book to update",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2b"
            }
          }
        ],
        "requestBody": {
          "description": "Updates an existing book of the library",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book",
                "example": {
                  "title": "Route All stock",
                  "synopsis": "I just got lost",
                  "price": 80,
                  "author": "Coldplay",
                  "pageCount": 23,
                  "publishedDate": "2012-10-09",
                  "genre": "Music"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input type provided."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Id provided does not exist."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Unauthorized": {
        "description": "Must have an authorization token.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "required": true
          },
          "message": {
            "type": "string",
            "required": true
          }
        }
      },
      "Usuario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "maxLength": 40
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 40
          },
          "telephone": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "2b",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 40,
            "example": "The one"
          },
          "synopsis": {
            "type": "string",
            "example": "This is a example of a synopsis"
          },
          "author": {
            "type": "string",
            "maxLength": 40,
            "example": "Aurélio Dias"
          },
          "price": {
            "type": "number",
            "example": 54
          },
          "pageCount": {
            "type": "number",
            "example": 278
          },
          "genre": {
            "type": "string",
            "example": "Biography"
          },
          "publishedDate": {
            "type": "string",
            "format": "date-time",
            "example": "2010-04-10"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Stock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1a",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "example": 10
          },
          "book": {
            "$ref": "#/components/schemas/Book",
            "example": {
              "title": "Route All stock",
              "synopsis": "I just got lost",
              "price": 80,
              "author": "Coldplay",
              "pageCount": 23,
              "publishedDate": "2012-10-09",
              "genre": "Music"
            }
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "1a"
          },
          "userId": {
            "type": "string",
            "example": "2b"
          },
          "bookId": {
            "type": "string",
            "example": "2b"
          },
          "author": {
            "type": "string",
            "maxLength": 40,
            "example": "Aurélio Dias"
          },
          "price": {
            "type": "number",
            "example": 2
          },
          "status": {
            "type": "string",
            "example": "Finished"
          },
          "startedAt": {
            "type": "Date",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "type": "Date",
            "format": "date-time",
            "nullable": true
          }
        }
      }
    }
  }
}
